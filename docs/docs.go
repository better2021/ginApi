// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2019-08-15 16:57:45.4438252 +0700 +07 m=+0.142617201

package docs

import (
	"bytes"
	"encoding/json"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "An example of gin",
        "title": "Golang Gin API",
        "termsOfService": "运行地址：http://localhost:8081",
        "contact": {},
        "license": {
            "name": "MIT //localhost:8081"
        },
        "version": "2.0"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v2/book/": {
            "get": {
                "description": "书籍列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "书籍"
                ],
                "summary": "获取书籍列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageNum",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "创建书籍",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "书籍"
                ],
                "summary": "创建书籍列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "author",
                        "name": "author",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "desc",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/book/{id}": {
            "put": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "书籍"
                ],
                "summary": "更新书籍列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "author",
                        "name": "author",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "desc",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "书籍"
                ],
                "summary": "删除书籍列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Book"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/film/": {
            "get": {
                "description": "电影列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "电影"
                ],
                "summary": "获取电影列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageNum",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Film"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "创建电影",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "电影"
                ],
                "summary": "创建电影列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "actor",
                        "name": "actor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "desc",
                        "name": "desc",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Film"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/film/{id}": {
            "put": {
                "description": "电影列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "电影"
                ],
                "summary": "更新电影列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Film"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"id必传\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "电影列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "电影"
                ],
                "summary": "删除电影列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Film"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"id必传\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/login/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户登录",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pwd",
                        "name": "pwd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "phone",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RegistInfo"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/music/": {
            "get": {
                "description": "音乐列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音乐"
                ],
                "summary": "获取音乐列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageNum",
                        "name": "pageNum",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Music"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "{ \"code\": 500, \"message\": \"服务器错误\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "创建音乐",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音乐"
                ],
                "summary": "创建音乐列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "year",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "style",
                        "name": "style",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Music"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/music/{id}": {
            "put": {
                "description": "音乐列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音乐"
                ],
                "summary": "更新音乐列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Music"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"id必传\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "音乐列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "音乐"
                ],
                "summary": "删除音乐列表",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Music"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"id必传\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/register/": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "注册用户",
                "parameters": [
                    {
                        "type": "string",
                        "description": "username",
                        "name": "username",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pwd",
                        "name": "pwd",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "phone",
                        "name": "phone",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RegistInfo"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/userList/": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "用户列表",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RegistInfo"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/v2/userList/{id}": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "用户"
                ],
                "summary": "删除用户",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.RegistInfo"
                        }
                    },
                    "400": {
                        "description": "{ \"code\": 400, \"message\": \"请求失败\" }",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Book": {
            "type": "object",
            "properties": {
                "author": {
                    "type": "string",
                    "example": "作者"
                },
                "createAt": {
                    "type": "string",
                    "example": "创建时间"
                },
                "desc": {
                    "type": "string",
                    "example": "描述"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "书名"
                },
                "updateAt": {
                    "type": "string",
                    "example": "更新时间"
                }
            }
        },
        "models.Film": {
            "type": "object",
            "properties": {
                "actor": {
                    "type": "string",
                    "example": "演员"
                },
                "address": {
                    "type": "string",
                    "example": "出品地区"
                },
                "createAt": {
                    "type": "string",
                    "example": "创建时间"
                },
                "desc": {
                    "type": "string",
                    "example": "描述"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "电影名称"
                },
                "updateAt": {
                    "type": "string",
                    "example": "更新时间"
                },
                "year": {
                    "type": "string",
                    "example": "年份"
                }
            }
        },
        "models.Music": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string",
                    "example": "创建时间"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "example": "歌曲名称"
                },
                "style": {
                    "type": "string",
                    "example": "音乐风格"
                },
                "updateAt": {
                    "type": "string",
                    "example": "更新时间"
                },
                "year": {
                    "type": "string",
                    "example": "年份"
                }
            }
        },
        "models.RegistInfo": {
            "type": "object",
            "properties": {
                "createAt": {
                    "type": "string",
                    "example": "创建时间"
                },
                "id": {
                    "type": "integer"
                },
                "phone": {
                    "description": "手机号",
                    "type": "string",
                    "example": "手机号"
                },
                "pwd": {
                    "description": "密码",
                    "type": "string",
                    "example": "密码"
                },
                "updateAt": {
                    "type": "string",
                    "example": "更新时间"
                },
                "username": {
                    "description": "用户名",
                    "type": "string",
                    "example": "用户名"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{ Schemes: []string{}}

type s struct{}

func (s *s) ReadDoc() string {
	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface {}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, SwaggerInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
