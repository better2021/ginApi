basePath: '{{.BasePath}}'
definitions:
  models.Book:
    properties:
      author:
        example: 作者
        type: string
      createAt:
        example: 创建时间
        type: string
      desc:
        example: 描述
        type: string
      id:
        type: integer
      name:
        example: 书名
        type: string
      updateAt:
        example: 更新时间
        type: string
    type: object
  models.Film:
    properties:
      actor:
        example: 演员
        type: string
      address:
        example: 出品地区
        type: string
      createAt:
        example: 创建时间
        type: string
      desc:
        example: 描述
        type: string
      id:
        type: integer
      name:
        example: 电影名称
        type: string
      updateAt:
        example: 更新时间
        type: string
      year:
        example: 年份
        type: string
    type: object
  models.Music:
    properties:
      createAt:
        example: 创建时间
        type: string
      id:
        type: integer
      name:
        example: 歌曲名称
        type: string
      style:
        example: 音乐风格
        type: string
      updateAt:
        example: 更新时间
        type: string
      year:
        example: 年份
        type: string
    type: object
  models.RegistInfo:
    properties:
      createAt:
        example: 创建时间
        type: string
      id:
        type: integer
      phone:
        description: 手机号
        example: 手机号
        type: string
      pwd:
        description: 密码
        example: 密码
        type: string
      updateAt:
        example: 更新时间
        type: string
      username:
        description: 用户名
        example: 用户名
        type: string
    type: object
host: '{{.Host}}'
info:
  contact: {}
  description: An example of gin
  license:
    name: MIT //localhost:8081
  termsOfService: 运行地址：http://localhost:8081
  title: Golang Gin API
  version: "2.0"
paths:
  /api/v2/book/:
    get:
      consumes:
      - application/json
      description: 书籍列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取书籍列表
      tags:
      - 书籍
    post:
      consumes:
      - application/json
      description: 创建书籍
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: author
        in: query
        name: author
        type: string
      - description: desc
        in: query
        name: desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建书籍列表
      tags:
      - 书籍
  /api/v2/book/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 删除书籍列表
      tags:
      - 书籍
    put:
      consumes:
      - application/json
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: author
        in: query
        name: author
        type: string
      - description: desc
        in: query
        name: desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Book'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 更新书籍列表
      tags:
      - 书籍
  /api/v2/film/:
    get:
      consumes:
      - application/json
      description: 电影列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Film'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 获取电影列表
      tags:
      - 电影
    post:
      consumes:
      - application/json
      description: 创建电影
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: address
        in: query
        name: address
        type: string
      - description: actor
        in: query
        name: actor
        type: string
      - description: desc
        in: query
        name: desc
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Film'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建电影列表
      tags:
      - 电影
  /api/v2/film/{id}:
    delete:
      consumes:
      - application/json
      description: 电影列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Film'
            type: object
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除电影列表
      tags:
      - 电影
    put:
      consumes:
      - application/json
      description: 电影列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Film'
            type: object
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 更新电影列表
      tags:
      - 电影
  /api/v2/login/:
    post:
      consumes:
      - application/json
      parameters:
      - description: username
        in: query
        name: username
        type: string
      - description: pwd
        in: query
        name: pwd
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegistInfo'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 用户登录
      tags:
      - 用户
  /api/v2/music/:
    get:
      consumes:
      - application/json
      description: 音乐列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: pageNum
        in: query
        name: pageNum
        required: true
        type: string
      - description: pageSize
        in: query
        name: pageSize
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Music'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
        "500":
          description: '{ "code": 500, "message": "服务器错误" }'
          schema:
            type: string
      summary: 获取音乐列表
      tags:
      - 音乐
    post:
      consumes:
      - application/json
      description: 创建音乐
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: year
        in: query
        name: year
        type: string
      - description: style
        in: query
        name: style
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Music'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 创建音乐列表
      tags:
      - 音乐
  /api/v2/music/{id}:
    delete:
      consumes:
      - application/json
      description: 音乐列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Music'
            type: object
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 删除音乐列表
      tags:
      - 音乐
    put:
      consumes:
      - application/json
      description: 音乐列表
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Music'
            type: object
        "400":
          description: '{ "code": 400, "message": "id必传" }'
          schema:
            type: string
      summary: 更新音乐列表
      tags:
      - 音乐
  /api/v2/register/:
    post:
      consumes:
      - application/json
      parameters:
      - description: username
        in: query
        name: username
        type: string
      - description: pwd
        in: query
        name: pwd
        type: string
      - description: phone
        in: query
        name: phone
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegistInfo'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 注册用户
      tags:
      - 用户
  /api/v2/userList/:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegistInfo'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 用户列表
      tags:
      - 用户
  /api/v2/userList/{id}:
    delete:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RegistInfo'
            type: object
        "400":
          description: '{ "code": 400, "message": "请求失败" }'
          schema:
            type: string
      summary: 删除用户
      tags:
      - 用户
swagger: "2.0"
